install.packages("readxl")
library(readxl)
library(xlsx)
install.packages("xlsx", dependencies = TRUE)
library(readxls)
library(readxl)
library(xlsx)
clear
clear()
MyData <- read.csv(file = "/home/kaustubh/Desktop/GitHub/Acads/Data-waala-repo/week7[project]/Mumbai_Housing.csv", header = TRUE, sep = ',')
# local address might be changed
#MyData <- na.omit(MyData)
dt = sort(sample(nrow(MyData), nrow(MyData)*.9))
train<-MyData[dt,]
test<-MyData[-dt,]
print(train)
R_squared = lm(formula = MEDV~. , data = train)
R_squared_test = predict(R_squared,newdata = test)
##print predicted and actual value
for(i in 1:51)#51 is 10 %
{
print(paste0("actual value=",test[i,14]))
print(paste0("predicted value=",R_squared_test[i]))
}
print("+----")
R_2 <- summary(R_squared)$r.squared
print(paste0("Value of R*R = ",R_2))
corrtable = cor(test, use = "all.obs")
print(corrtable)
max = 0
max_i=0
max_j=0
for(i in 1:12)
{
for (j in (i+1):14)
{
mod = corrtable[i,j]
if(mod < 0){
mod = -1*mod
}
if(max < mod)
{
max_i = i
max_j = j
max = mod
}
}
}
print("One of the following has to be removed")
print(rownames(corrtable)[max_i])
print(rownames(corrtable)[max_j])
# need to verify if part 5 is code or report
source('~/Desktop/GitHub/Acads/Data-waala-repo/week7[project]/train.r')
source('~/Desktop/GitHub/Acads/Data-waala-repo/week7[project]/train.r')
MyData <- read.csv(file = "/home/kaustubh/Desktop/GitHub/Acads/Data-waala-repo/week7[project]/Mumbai_Housing.csv", header = TRUE, sep = ',',nrows=507)
# local address might be changed
#MyData <- na.omit(MyData)
dt = sort(sample(nrow(MyData), nrow(MyData)*.9))
train<-MyData[dt,]
test<-MyData[-dt,]
print(train)
R_squared = lm(formula = MEDV~. , data = train)
R_squared_test = predict(R_squared,newdata = test)
MyData <- read.csv(file = "/home/kaustubh/Desktop/GitHub/Acads/Data-waala-repo/week7[project]/Mumbai_Housing.csv", header = TRUE, sep = ',',nrows=506)
# local address might be changed
#MyData <- na.omit(MyData)
dt = sort(sample(nrow(MyData), nrow(MyData)*.9))
train<-MyData[dt,]
test<-MyData[-dt,]
print(train)
R_squared = lm(formula = MEDV~. , data = train)
R_squared_test = predict(R_squared,newdata = test)
##print predicted and actual value
for(i in 1:51)#51 is 10 %
{
print(paste0("actual value=",test[i,14]))
print(paste0("predicted value=",R_squared_test[i]))
}
print("+----")
R_2 <- summary(R_squared)$r.squared
print(paste0("Value of R*R = ",R_2))
corrtable = cor(test, use = "all.obs")
print(corrtable)
# print(corrtable)
max = 0
max_i=0
max_j=0
for(i in 1:12)
{
for (j in (i+1):14)
{
mod = corrtable[i,j]
if(mod < 0){
mod = -1*mod
}
if(max < mod)
{
max_i = i
max_j = j
max = mod
}
}
}
print("One of the following has to be removed")
print(rownames(corrtable)[max_i])
print(rownames(corrtable)[max_j])
# need to verify if part 5 is code or report
View(corrtable)
View(corrtable)
scriptPath = thisFile()
print(scriptPath)
loc = paste0(scriptPath,"/Mumbai_Housing.csv")
print(loc)
loc = "/home/kaustubh/Desktop/GitHub/Acads/Data-waala-repo/week7[project]/Mumbai_Housing.csv"
MyData <- read.csv(file = loc, header = TRUE, sep = ',',nrows=506)
# local address might be changed
#MyData <- na.omit(MyData)
dt = sort(sample(nrow(MyData), nrow(MyData)*.9))
train<-MyData[dt,]
test<-MyData[-dt,]
print("\nTraining set for this iteration : \n")
print(train)
print("\nTest set for this iteration : \n")
print(train)
R_squared = lm(formula = MEDV~. , data = train)
R_squared_test = predict(R_squared,newdata = test)
print("Printing predictions and actual values :\n\n\n")
##print predicted and actual value
for(i in 1:51)#51 is 10 %
{
print(paste0("actual value=",test[i,14]))
print(paste0("predicted value=",R_squared_test[i]))
}
print("+----")
R_2 <- summary(R_squared)$r.squared
print(paste0("Value of R*R = ",R_2))
corrtable = cor(test, use = "all.obs")
print("Correlation matrix : \n")
print(corrtable)
max = 0
max_i=0
max_j=0
for(i in 1:12)
{
for (j in (i+1):14)
{
mod = corrtable[i,j]
if(mod < 0){
mod = -1*mod
}
if(max < mod)
{
max_i = i
max_j = j
max = mod
}
}
}
print("One of the following has to be removed")
print(rownames(corrtable)[max_i])
print(rownames(corrtable)[max_j])
# part 5 is to be covered in report
View(test)
View(test)
print(paste0("Index","\t","Actual value","\t","Prediction"))
cat("Index\tActual value\tPrediction")
loc = "Mumbai_Housing.csv"# local address might be changed
MyData <- read.csv(file = loc, header = TRUE, sep = ',',nrows=506)
#MyData <- na.omit(MyData)
dt = sort(sample(nrow(MyData), nrow(MyData)*.9))
train<-MyData[dt,]
test<-MyData[-dt,]
print("Training set for this iteration saved in train.csv ")
write.table(train, file ="train.csv", sep=",", row.names=T, col.names=T);
print("Test set for this iteration saved in test.csv")
write.table(test, file ="test.csv", sep=",", row.names=T, col.names=T);
R_squared = lm(formula = MEDV~. , data = train)
R_squared_test = predict(R_squared,newdata = test)
print("Printing predictions and actual values :")
cat("\n")
cat("\n")
##print predicted and actual value
cat("Index\tActual value\tPrediction")
for(i in 1:51)#51 is 10 %
{
cat(paste0(i,"\t",test[i,14],R_squared_test[i]))
#print(paste0("actual value=",test[i,14]))
#print(paste0("predicted value=",R_squared_test[i]))
}
print("+----")
R_2 <- summary(R_squared)$r.squared
print("Printing predictions and actual values :")
cat("\n")
cat("\n")
##print predicted and actual value
cat("Index\tActual value\tPrediction")
for(i in 1:51)#51 is 10 %
{
cat(paste0(i,"\t",test[i,14],"\t",R_squared_test[i],"\n"))
#print(paste0("actual value=",test[i,14]))
#print(paste0("predicted value=",R_squared_test[i]))
}
View(corrtable)
View(corrtable)
